# .rubocop.yml for RB101 Lessons 2-5 (17 Mar 2021)

AllCops:
  # Display cop names
  DisplayCopNames: true
  # Display Extra details
  ExtraDetails: true
  # Style guide URLs are not displayed in offense messages by default. Change
  # behavior by overriding DisplayStyleGuide, or by giving the
  # -S/--display-style-guide option.
  DisplayStyleGuide: true
  # When specifying style guide URLs, any paths and/or fragments will be
  # evaluated relative to the base URL.
  StyleGuideBaseURL: https://rubystyle.guide/
  # What version of the Ruby interpreter is the inspected code intended to
  # run on? (If there is more than one, set this to the lowest version.)
  TargetRubyVersion: 2.4

Style/BlockComments:
  Description: 'Do not use block comments.'
  Enabled: false

Style/CommandLiteral:
  Description: 'Use `` or %x around command literals.'
  Enabled: true
  # backticks: Always use backticks.
  # percent_x: Always use %x.
  # mixed: Use backticks on single-line commands, and %x on multi-line commands.
  EnforcedStyle: mixed
  SupportedStyles:
    - backticks
    - percent_x
    - mixed
  # If false, the cop will always recommend using %x if one or more backticks
  # are found in the command string.
  AllowInnerBackticks: false

Style/CommentAnnotation:
  Description: >-
    Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: false

Style/Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: false

Style/DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  Enabled: false

Layout/EmptyLineBetweenDefs:
  Enabled: true
  AllowAdjacentOneLineDefs: true

Style/EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false
  Description: Require the addition of the frozen string literal comment.

Style/GuardClause:
  Description: Check for conditionals that can be replaced with guard clauses.
  Enabled: false

Style/HashSyntax:
  Description: >-
                 Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax
                 { :a => 1, :b => 2 }.
  Enabled: true
  EnforcedStyle: ruby19_no_mixed_keys
  UseHashRocketsWithSymbolValues: false
  PreferHashRocketsForNonAlnumEndingSymbols: false

Style/IfUnlessModifier:
  Description: >-
                 Favor modifier if/unless usage when you have a
                 single-line body.
  Enabled: false

Style/InlineComment:
  Description: Avoid inline comments.
  Enabled: false

Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  Enabled: false

Style/ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  Enabled: false

Style/MutableConstant:
  Description: Freeze mutable constants.
  Enabled: false

Style/NegatedIf:
  Description: >-
                 Favor unless over if for negative conditions
                 (or control flow or).
  Enabled: false

Style/NegatedWhile:
  Description: 'Favor until over while for negative conditions.'
  Enabled: false

Style/Next:
  Description: 'Use `next` to skip iteration instead of a condition at the end.'
  Enabled: false

Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  Enabled: false

Style/NumericPredicate:
  Description: >-
                 Checks for the use of predicate- or comparison methods for
                 numeric comparisons.
  Enabled: false

Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  Enabled: false

Naming/BinaryOperatorParameterName:
  Description: When defining binary operators, name the argument other.
  Enabled: false

Style/ParenthesesAroundCondition:
  Description: >-
                 Don't use parentheses around the condition of an
                 if/unless/while.
  Enabled: true
  AllowSafeAssignment: false

Style/PercentLiteralDelimiters:
  Description: 'Use `%`-literal delimiters consistently'
  Enabled: false

Style/PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  Enabled: false

Style/Proc:
  Description: Use proc instead of Proc.new.
  Enabled: false

Style/RedundantFetchBlock:
  Description: Only way to keep FetchBlock warning from popping up.
  Enabled: true

Style/RedundantParentheses:
  Enabled: false

Style/RedundantReturn:
  Description: "Don't use return where it's not required."
  Enabled: true
  # When true allows code like `return x, y`.
  AllowMultipleReturnValues: true

Style/RegexpLiteral:
  Description: 'Use / or %r around regular expressions.'
  Enabled: true
  EnforcedStyle: mixed
  AllowInnerSlashes: false

Style/SafeNavigation:
  Description: >-
                  This cop transforms usages of a method call safeguarded by
                  a check for the existance of the object to
                  safe navigation (`&.`).
  Enabled: false

Style/SingleLineBlockParams:
  Description: Enforces the names of some block params.
  Enabled: false

Style/SingleLineMethods:
  Description: Avoid single-line methods.
  Enabled: false

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: false

Style/StringLiterals:
  Description: Force use of single or double quotes when no interpolation
  Enabled: false

Style/SymbolArray:
  Description: 'Use %i or %I for arrays of symbols.'
  StyleGuide: '#percent-i'
  Enabled: false

Style/WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  Enabled: false

Style/WordArray:
  Description: 'Use %w or %W for arrays of words.'
  Enabled: false

Metrics/AbcSize:
  Description: >-
                 A calculated magnitude based on number of assignments,
                 branches, and conditions.
  Enabled: true
  Max: 18

Metrics/BlockLength:
  Description: Limit size of blocks.
  Enabled: false

Metrics/ClassLength:
  Description: 'Avoid classes longer than 100 lines of code.'
  Enabled: false

Layout/LineLength:
  Description: Limit lines to 80 characters.
  Enabled: true
  Max: 80
  StyleGuide: https://rubystyle.guide/#80-character-limits
  AllowURI: true
  URISchemes:
  - http
  - https

Metrics/MethodLength:
  Description: 'Avoid methods longer than 15 lines of code.'
  Enabled: true
  CountComments: false  # count full line comments?
  Max: 15

Lint/LiteralInInterpolation:
  Description: 'Avoid interpolating literals in strings'
  AutoCorrect: false
  Enabled: true

Layout/EmptyLinesAroundAttributeAccessor:
  Description: 'Checks for a newline after an attribute accessor or a group of them.'
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Description: 'Checks method call operators to not have spaces around them.'
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Description: 'Algorithmic constants for OpenSSL::Cipher and OpenSSL::Digest deprecated since OpenSSL version 2.2.0. Prefer passing a string instead.'
  Enabled: false

Lint/MixedRegexpCaptureTypes:
  Description: 'Do not mix named captures and numbered captures'
  Enabled: false

Lint/RaiseException:
  Description: 'Checks for raise or fail statements which are raising Exception class.'
  Enabled: false

Lint/StructNewOverride:
  Description: 'Checks unexpected overrides of the Struct built-in methods via Struct.new'
  Enabled: false

Style/ExponentialNotation:
  Description: 'Enforces consistency when using exponential notation for numbers in the code'
  Enabled: false

Style/HashTransformKeys:
  Description: 'Tries to use a simpler & faster call to transform_keys where possible'
  Enabled: false

Style/HashTransformValues:
  Description: 'Tries to use a simpler & faster call to transform_values where possible'
  Enabled: false

Style/RedundantRegexpCharacterClass:
  Description: 'Checks for unnecessary single-element Regexp character classes.'
  Enabled: false

Style/RedundantRegexpEscape:
  Description: 'Checks for redundant escapes inside Regexp literals'
  Enabled: false

Style/SlicingWithRange:
  Description: 'Checks that arrays are sliced with endless ranges instead of ary[start..-1]'
  Enabled: false

Style/FormatStringToken:
  Description: 'Use a consistent style for named format string tokens.'
  Enabled: false

Layout/EmptyLineAfterGuardClause:
  Description: 'Requires empty line after guard clause'
  Enabled: false

Style/FloatDivision:
  Description: 'Checks for division with integers coerced to floats.'
  Enabled: false

Naming/MethodParameterName:
  Description: 'Parameter names at least 3 characters long'
  Enabled: false

Style/ConditionalAssignment:
  Description: 'Use return value of conditional for assignment'
  Enabled: false

Naming/AccessorMethodName:
  Description: 'Do not prefix reader method names with get_'
  Enabled: false

Style/NegatedUnless:
  Description: 'Favor if over unless'
  Enabled: false

Style/MultipleComparison:
  Description: 'Avoid comparing variable with multiple items'
  Enabled: false

Layout/HeredocIndentation:
  Description: 'Checks the indentation of the here document bodies'
  Enabled: false

Layout/ClosingHeredocIndentation:
  Description: 'Checks the indentation of here document closings.'
  Enabled: false

Style/CommentedKeyword:
  Description: 'Comments should not be on same line as def'
  Enabled: false

Style/HashEachMethods:
  Description: 'each_key over keys.each'
  Enabled: false

Style/MultilineWhenThen:
  Description: 'Avoid then for multiline when statement'
  Enabled: false

Style/InverseMethods:
  Description: 'reject instead of reversed select'
  Enabled: false

Style/ZeroLengthPredicate:
  Description: 'empty? instead of length == 0'
  Enabled: false

# After updating gems for Ruby 2.7.5, the cops below were all added and disabled:

Gemspec/DeprecatedAttributeAssignment: # new in 1.30
  Enabled: false
Gemspec/DevelopmentDependencies: # new in 1.44
  Enabled: false
Gemspec/RequireMFA: # new in 1.23
  Enabled: false
Layout/LineContinuationLeadingSpace: # new in 1.31
  Enabled: false
Layout/LineContinuationSpacing: # new in 1.31
  Enabled: false
Layout/LineEndStringConcatenationIndentation: # new in 1.18
  Enabled: false
Layout/SpaceBeforeBrackets: # new in 1.7
  Enabled: false
Lint/AmbiguousAssignment: # new in 1.7
  Enabled: false
Lint/AmbiguousOperatorPrecedence: # new in 1.21
  Enabled: false
Lint/AmbiguousRange: # new in 1.19
  Enabled: false
Lint/ConstantOverwrittenInRescue: # new in 1.31
  Enabled: false
Lint/DeprecatedConstants: # new in 1.8
  Enabled: false
Lint/DuplicateBranch: # new in 1.3
  Enabled: false
Lint/DuplicateMagicComment: # new in 1.37
  Enabled: false
Lint/DuplicateMatchPattern: # new in 1.50
  Enabled: false
Lint/DuplicateRegexpCharacterClassElement: # new in 1.1
  Enabled: false
Lint/EmptyBlock: # new in 1.1
  Enabled: false
Lint/EmptyClass: # new in 1.3
  Enabled: false
Lint/EmptyInPattern: # new in 1.16
  Enabled: false
Lint/IncompatibleIoSelectWithFiberScheduler: # new in 1.21
  Enabled: false
Lint/LambdaWithoutLiteralBlock: # new in 1.8
  Enabled: false
Lint/NoReturnInBeginEndBlocks: # new in 1.2
  Enabled: false
Lint/NonAtomicFileOperation: # new in 1.31
  Enabled: false
Lint/NumberedParameterAssignment: # new in 1.9
  Enabled: false
Lint/OrAssignmentToConstant: # new in 1.9
  Enabled: false
Lint/RedundantDirGlobSort: # new in 1.8
  Enabled: false
Lint/RefinementImportMethods: # new in 1.27
  Enabled: false
Lint/RequireRangeParentheses: # new in 1.32
  Enabled: false
Lint/RequireRelativeSelfPath: # new in 1.22
  Enabled: false
Lint/SymbolConversion: # new in 1.9
  Enabled: false
Lint/ToEnumArguments: # new in 1.1
  Enabled: false
Lint/TripleQuotes: # new in 1.9
  Enabled: false
Lint/UnexpectedBlockArity: # new in 1.5
  Enabled: false
Lint/UnmodifiedReduceAccumulator: # new in 1.1
  Enabled: false
Lint/UselessRescue: # new in 1.43
  Enabled: false
Lint/UselessRuby2Keywords: # new in 1.23
  Enabled: false
Metrics/CollectionLiteralLength: # new in 1.47
  Enabled: false
Naming/BlockForwarding: # new in 1.24
  Enabled: false
Security/CompoundHash: # new in 1.28
  Enabled: false
Security/IoMethods: # new in 1.22
  Enabled: false
Style/ArgumentsForwarding: # new in 1.1
  Enabled: false
Style/ArrayIntersect: # new in 1.40
  Enabled: false
Style/CollectionCompact: # new in 1.2
  Enabled: false
Style/ComparableClamp: # new in 1.44
  Enabled: false
Style/ConcatArrayLiterals: # new in 1.41
  Enabled: false
Style/DataInheritance: # new in 1.49
  Enabled: false
Style/DirEmpty: # new in 1.48
  Enabled: false
Style/DocumentDynamicEvalDefinition: # new in 1.1
  Enabled: false
Style/EmptyHeredoc: # new in 1.32
  Enabled: false
Style/EndlessMethod: # new in 1.8
  Enabled: false
Style/EnvHome: # new in 1.29
  Enabled: false
Style/FetchEnvVar: # new in 1.28
  Enabled: false
Style/FileEmpty: # new in 1.48
  Enabled: false
Style/FileRead: # new in 1.24
  Enabled: false
Style/FileWrite: # new in 1.24
  Enabled: false
Style/HashConversion: # new in 1.10
  Enabled: false
Style/HashExcept: # new in 1.7
  Enabled: false
Style/IfWithBooleanLiteralBranches: # new in 1.9
  Enabled: false
Style/InPatternThen: # new in 1.16
  Enabled: false
Style/MagicCommentFormat: # new in 1.35
  Enabled: false
Style/MapCompactWithConditionalBlock: # new in 1.30
  Enabled: false
Style/MapToHash: # new in 1.24
  Enabled: false
Style/MapToSet: # new in 1.42
  Enabled: false
Style/MinMaxComparison: # new in 1.42
  Enabled: false
Style/MultilineInPatternThen: # new in 1.16
  Enabled: false
Style/NegatedIfElseCondition: # new in 1.2
  Enabled: false
Style/NestedFileDirname: # new in 1.26
  Enabled: false
Style/NilLambda: # new in 1.3
  Enabled: false
Style/NumberedParameters: # new in 1.22
  Enabled: false
Style/NumberedParametersLimit: # new in 1.22
  Enabled: false
Style/ObjectThen: # new in 1.28
  Enabled: false
Style/OpenStructUse: # new in 1.23
  Enabled: false
Style/OperatorMethodCall: # new in 1.37
  Enabled: false
Style/QuotedSymbols: # new in 1.16
  Enabled: false
Style/RedundantArgument: # new in 1.4
  Enabled: false
Style/RedundantConstantBase: # new in 1.40
  Enabled: false
Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Enabled: false
Style/RedundantEach: # new in 1.38
  Enabled: false
Style/RedundantHeredocDelimiterQuotes: # new in 1.45
  Enabled: false
Style/RedundantInitialize: # new in 1.27
  Enabled: false
Style/RedundantLineContinuation: # new in 1.49
  Enabled: false
Style/RedundantSelfAssignmentBranch: # new in 1.19
  Enabled: false
Style/RedundantStringEscape: # new in 1.37
  Enabled: false
Style/SelectByRegexp: # new in 1.22
  Enabled: false
Style/StringChars: # new in 1.12
  Enabled: false
Style/SwapValues: # new in 1.1
  Enabled: false